using System.Collections;using System.Collections.Generic;using UnityEngine;using UnityEditor;namespace RogoDigital.Lipsync.AutoSync{	[CustomEditor(typeof(ASAzureSpeechRecognitionSettings))]	public class ASAzureSpeechRecognitionSettingsEditor : Editor	{		private string[] regionDisplayNames = { "Central US", "East US", "East US 2", "North Central US", "South Central US", "West Central US", "West US", "West US 2", "Canada Central", "Brazil South", "East Asia", "Southeast Asia", "Australia East", "Central India", "Japan East", "Japan West", "Korea Central", "North Europe", "West Europe", "France Central", "UK South" };		private string[] regionValueNames = { "centralus", "eastus", "eastus2", "northcentralus", "southcentralus", "westcentralus", "westus", "westus2", "canadacentral", "brazilsouth", "eastasia", "southeastasia", "australiaeast", "centralindia", "japaneast", "japanwest", "koreacentral", "northeurope", "westeurope", "francecentral", "uksouth" };		private int regionChoice = 0;		private void OnEnable()		{			string region = serializedObject.FindProperty("regionName").stringValue;			for (int i = 0; i < regionValueNames.Length; i++)			{				if (regionValueNames[i] == region)				{					regionChoice = i;					break;				}			}		}		public override void OnInspectorGUI()		{			serializedObject.Update();			var subscriptionKey = serializedObject.FindProperty("subscriptionKey");			var regionName = serializedObject.FindProperty("regionName");			EditorGUI.BeginChangeCheck();			EditorGUILayout.PropertyField(subscriptionKey, GUILayout.MaxWidth(450));			regionChoice = EditorGUILayout.Popup("Region", regionChoice, regionDisplayNames, GUILayout.MaxWidth(300));			if (EditorGUI.EndChangeCheck())			{				regionName.stringValue = regionValueNames[regionChoice];				EditorPrefs.SetString("as_azurespeech_subscription_key", subscriptionKey.stringValue);				EditorPrefs.SetString("as_azurespeech_region_name", regionName.stringValue);			}			serializedObject.ApplyModifiedProperties();		}	}}